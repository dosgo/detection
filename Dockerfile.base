FROM golang:1.10.1-alpine3.7

ENV BUILD ca-certificates \
         git \
         build-base \
         musl-dev \
         alpine-sdk \
         make \
         gcc \
         g++ \
         libc-dev \
         linux-headers \
         libjpeg-turbo \
         libpng \
         libwebp \
         libwebp-dev \
         tiff \
         ffmpeg-libs \
         libavc1394 \
         jasper-libs \
         jasper-dev \
         openblas \
         libgphoto2 \
         gstreamer \
         gst-plugins-base

ENV DEV clang clang-dev cmake pkgconf \
         openblas-dev gstreamer-dev gst-plugins-base-dev \
         libgphoto2-dev libjpeg-turbo-dev libpng-dev \
         tiff-dev jasper-dev ffmpeg-dev libavc1394-dev

ENV CC /usr/bin/clang
ENV CXX /usr/bin/clang++

ENV OPENCV_VERSION=3.4.1

RUN apk add --no-cache ${DEV} && \
    apk add --no-cache ${BUILD}


RUN mkdir /opt && cd /opt && \
  wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip && \
  wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip && \
  unzip ${OPENCV_VERSION}.zip && \
  unzip opencv_contrib.zip && \
  rm -rf ${OPENCV_VERSION}.zip && \
  rm -rf opencv_contrib.zip && \
  mkdir /opt/opencv-3.4.1/build

WORKDIR /opt/opencv-3.4.1/build

RUN cmake \
    -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-3.4.1/modules \
    -D WITH_FFMPEG=YES \
    -D INSTALL_C_EXAMPLES=NO \
    -D INSTALL_PYTHON_EXAMPLES=NO \
    -D BUILD_ANDROID_EXAMPLES=NO \
    -D BUILD_DOCS=NO \
    -D BUILD_TESTS=NO \
    -D BUILD_PERF_TESTS=NO \
    -D BUILD_EXAMPLES=NO \
    -D BUILD_opencv_java=NO \
    -D BUILD_opencv_python=NO \
    -D BUILD_opencv_python2=NO \
    -D BUILD_opencv_python3=NO .. && \
    make -j4 && \
    make install && \
    rm -rf /tmp/opencv && \
    rm -vrf /var/cache/apk/*;
